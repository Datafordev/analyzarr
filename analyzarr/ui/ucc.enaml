from enaml.layout.api import vbox, hbox
from enaml.widgets.api import (
    Window, ToolBar, DockPane, MenuBar, Menu, Action, ActionGroup,
    Container, Html, PushButton, EnableCanvas, CheckBox, FileDialog,
    SpinBox, Label
)
from enaml.stdlib.fields import FloatField

# TODO: need to import controller

enamldef CellCropperInterface(DockPane):
    attr controller
    floating=True
    title = "Cell Cropper"
    Container:
        constraints = [hbox(image_container, template_container)]
        #: First, the left view with the parent image
        Container: image_container:
            constraints = [ vbox(imageCanvas, hbox(prev_img, next_img, showCC))]
            #: the image (Chaco/Enable canvas)
            EnableCanvas: imageCanvas:
                component << controller.plot
            #: the checkbox to show cross correlation view
            CheckBox: showCC:
                text = "Show cross-correlation"
                checked << controller.ShowCC
            #: the buttons to go between images
            PushButton: prev_img:
                text = '<'
                clicked :: controller.decrease_selected_index()
            PushButton: next_img:
                text = '>'
                clicked :: controller.increase_selected_index()
                
        #: now the right view the template, controls, and info
        Container: template_container:
            constraints = [
                vbox(
                    hbox(l_left_coord, left_coord, 
                        l_top_coord, top_coord, 
                        l_size, size),
                    templateCanvas, 
                    hbox(l_peak_width,peak_width),
                    hbox(l_thresh_lower, thresh_lower, 
                        l_thresh_upper, thresh_upper),
                    )
                    ]
                                
            EnableCanvas: templateCanvas:
                component << controller.template_plot
            Label: l_left_coord:
                text = "Left coordinate"
            SpinBox: left_coord:
                value := controller.template_left
                maximum << controller.max_pos_x
            Label: l_top_coord:
                text = "Top coordinate"
            SpinBox: top_coord:
                value := controller.template_top
                maximum << controller.max_pos_y
            Label: l_size:
                text = "Size"
            SpinBox: size:
                value := controller.template_size
                maximum = 1024
            Label: l_peak_width:
                text = 'Peak Width'
            SpinBox: peak_width:
                value := controller.peak_width
            Label: l_thresh_upper:
                text = 'Upper Threshold'
            FloatField: thresh_upper:
                value := controller.thresh_upper
            Label: l_thresh_lower:
                text = 'Lower Threshold'
            FloatField: thresh_lower:
                value := controller.thresh_lower
            